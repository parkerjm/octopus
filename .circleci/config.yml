version: 2.1

###########################################################

orbs:
  aws-eks: circleci/aws-eks@0.2.3

###########################################################

jobs:
  build_image:
    docker:
      - image: cimg/elixir:1.11.3-node
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          IMAGE=crownandcaliber/octopus:$CIRCLE_SHA1
          LATEST=crownandcaliber/octopus:latest
          docker build -t $IMAGE -t $LATEST .
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push $IMAGE
          docker push $LATEST

  build_db_migrator_image:
    docker:
      - image: cimg/elixir:1.11.3-node
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          IMAGE=crownandcaliber/octopus-db-migration:$CIRCLE_SHA1
          docker build --target builder -t $IMAGE .
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push $IMAGE


  build:
    docker:
      - image: cimg/elixir:1.11.3-node
        environment:
          MIX_ENV: test

      - image: circleci/postgres:12.5
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: octopus_test
          POSTGRES_HOST_AUTH_METHOD: trust

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "mix.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: compile app
          command: |
            mix do local.hex --force, local.rebar --force, deps.get, compile
      - save_cache:
          paths:
            - ./deps
          key: v1-dependencies-{{ checksum "mix.lock" }}
      - run:
          name: code style check
          command: mix format --check-formatted
      - run:
          name: setup database
          command: mix do ecto.create, ecto.migrate
      - run:
          name: run tests
          command: mix test

  migrate_staging_db:
    docker:
      - image: cimg/python:3.7
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          aws-region: us-east-2
          cluster-name: staging
          install-kubectl: true
      - run:
          name: migrate staging database
          command: |
            git clone  git@github.com:crownandcaliber/migrate_db_script.git ~/migratescript
            IMAGE_TAG=$CIRCLE_SHA1 \
            APP_ENV=staging \
            JOB=octopus-$APP_ENV-db-migration \
            APP_NAME=octopus \
            IMAGE_NAME=octopus-db-migration \
            ~/migratescript/run_migration.sh elixir

  migrate_production_db:
    docker:
      - image: cimg/python:3.7
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          aws-region: us-east-2
          cluster-name: prod
          install-kubectl: true
      - run:
          name: migrate production database
          command: |
            git clone  git@github.com:crownandcaliber/migrate_db_script.git ~/migratescript
            IMAGE_TAG=$CIRCLE_SHA1 \
            APP_ENV=production \
            JOB=octopus-$APP_ENV-db-migration \
            APP_NAME=octopus \
            IMAGE_NAME=octopus-db-migration \
            ~/migratescript/run_migration.sh elixir

###########################################################

workflows:
  build_and_deploy:
    jobs:
      - build
      - build_image
      - build_db_migrator_image

      # branch build
      - deploy_staging_hold:
          name: Deploy Branch to Staging
          type: approval
          requires:
            - build
            - build_image
            - build_db_migrator_image
          filters:
            branches:
              ignore:
                - master
                - /hotfix/
      - migrate_staging_db:
          name: Migrate Staging Database for Branch
          requires:
            - Deploy Branch to Staging
          filters:
            branches:
              ignore:
                - master
                - /hotfix/
      - aws-eks/update-container-image:
          name: Staging Branch Deploy
          requires:
            - Migrate Staging Database for Branch
          aws-region: us-east-2
          cluster-name: staging
          resource-name: deployment.v1.apps/octopus-staging
          container-image-updates: octopus=crownandcaliber/octopus:$CIRCLE_SHA1
          record: true
          filters:
            branches:
              ignore:
                - master
                - /hotfix/
      ###

      # master build
      - migrate_staging_db:
          name: Migrate Staging Database
          requires:
            - build
            - build_image
            - build_db_migrator_image
          filters:
            branches:
              only:
                - master
                - /hotfix/
      - aws-eks/update-container-image:
          name: Staging Deploy
          requires:
            - Migrate Staging Database
          aws-region: us-east-2
          cluster-name: staging
          resource-name: deployment.v1.apps/octopus-staging
          container-image-updates: octopus=crownandcaliber/octopus:$CIRCLE_SHA1
          record: true
          filters:
            branches:
              only:
                - master
                - /hotfix/
      ###

      - deploy_prod:
          name: Deploy to prod
          type: approval
          requires:
            - build
            - build_image
            - build_db_migrator_image
          filters:
            branches:
              only:
                - master
                - /hotfix-.*/
      - safety_check:
          name: Are you sure?
          type: approval
          requires:
            - Deploy to prod
          filters:
            branches:
              only:
                - master
                - /hotfix-.*/
      - migrate_production_db:
          name: Migrate Prod Database
          requires:
            - Are you sure?
      - aws-eks/update-container-image:
          name: Production Deploy
          requires:
            - Migrate Prod Database
          filters:
            branches:
              only:
                - master
                - /hotfix-.*/
          aws-region: us-east-2
          cluster-name: prod
          resource-name: deployment.v1.apps/octopus-production
          container-image-updates: octopus=crownandcaliber/octopus:$CIRCLE_SHA1
          record: true
